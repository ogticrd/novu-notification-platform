version: '3.9'
name: notificaciones
services:
  redis:
    image: 'redis:alpine'
    container_name: redis
    restart: unless-stopped
    logging:
      driver: 'none'
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      - PUID=1000
      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017
  api:
    image: 'ghcr.io/novuhq/novu/api:0.24.0' # Api
    depends_on:
      - mongodb
      - redis
    container_name: api
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      NODE_ENV: ${NODE_ENV}
      API_ROOT_URL: ${API_ROOT_URL}
      DISABLE_USER_REGISTRATION: ${DISABLE_USER_REGISTRATION}
      PORT: ${API_PORT}
      FRONT_BASE_URL: ${FRONT_BASE_URL}
      MONGO_URL: ${MONGO_URL}
      MONGO_MIN_POOL_SIZE: ${MONGO_MIN_POOL_SIZE}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST: ${REDIS_CACHE_SERVICE_HOST}
      REDIS_CACHE_SERVICE_PORT: ${REDIS_CACHE_SERVICE_PORT}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      STORAGE_SERVICE: ${STORAGE_SERVICE}
      # JWT_SECRET: ${JWT_SECRET}
      # STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY}
    ports:
      - '3000:3000'
  worker:
    image: 'ghcr.io/novuhq/novu/worker:0.24.0' # It handles tasks such as asynchronous job processing, queue management, etc.
    depends_on:
      - mongodb
      - redis
    container_name: worker
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URL: ${MONGO_URL}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST: ${REDIS_CACHE_SERVICE_HOST}
      REDIS_CACHE_SERVICE_PORT: ${REDIS_CACHE_SERVICE_PORT}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      STORAGE_SERVICE: ${STORAGE_SERVICE}
      # STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY}
      BROADCAST_QUEUE_CHUNK_SIZE: 100
      MULTICAST_QUEUE_CHUNK_SIZE: 100
  ws:
    image: 'ghcr.io/novuhq/novu/ws:0.24.0' # for real-time communication between clients and the server.
    depends_on:
      - mongodb
      - redis
    container_name: ws
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      PORT: ${WS_PORT}
      NODE_ENV: ${NODE_ENV}
      MONGO_URL: ${MONGO_URL}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # JWT_SECRET: ${JWT_SECRET}
      # WS_CONTEXT_PATH: ${WS_CONTEXT_PATH}
    ports:
      - '3002:3002'
  web:
    image: 'ghcr.io/novuhq/novu/web:0.24.0' # It hosts the web application that users interact with
    depends_on:
      - api
      - worker
    container_name: web
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      REACT_APP_API_URL: ${API_ROOT_URL}
      REACT_APP_ENVIRONMENT: ${NODE_ENV}
      REACT_APP_DOCKER_HOSTED_ENV: 'true'
      REACT_APP_WS_URL: ${REACT_APP_WS_URL}
    ports:
      - 4200:4200
volumes:
  mongodb: ~
